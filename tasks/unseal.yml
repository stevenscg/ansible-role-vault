---
#
# Ansible tasks for the vault role
#

- name: unseal - Get the vault seal status
  uri:
    url: "{{ vault_base_url }}/v1/sys/seal-status"
    method: GET
    status_code: 200
    validate_certs: "{{ vault_api_validate_certs }}"
  register: vault_seal_status

- name: unseal - Register vault seal status
  set_fact:
    vault_sealed: "{{ vault_seal_status.json.sealed | bool }}"

- name: unseal - Get the vault unseal keys from the local environment
  set_fact:
    vault_unseal_keys: "{{ lookup('env', 'VAULT_UNSEAL_KEY') }}"
  when: ( vault_sealed and vault_unseal_keys is not defined )

- name: unseal - Load the vault keys from the control machine
  set_fact:
    vault_unseal_keys: "{{ ( lookup('file', vault_keys_file_local) | from_json )['keys'] }}"
  when: vault_sealed and ( vault_keys_file_local is defined ) and ( vault_unseal_keys is not defined or vault_unseal_keys == "" )

- name: unseal - Read the remote the vault keys
  slurp:
    src: "{{ vault_keys_file }}"
  register: remote_vault_keys
  when: vault_sealed and ( vault_keys_file is defined ) and ( vault_unseal_keys is not defined or vault_unseal_keys == "" )

- name: unseal - Load the vault keys from the target machine
  set_fact:
    vault_unseal_keys: "{{ ( remote_vault_keys.content | b64decode | from_json )['keys'] }}"
  when: vault_sealed and ( vault_keys_file is defined ) and ( vault_unseal_keys is not defined or vault_unseal_keys == "" )

- name: unseal - Ensure the vault unseal keys are available
  fail:
    msg: "vault_unseal_keys must be set"
  when: vault_sealed and ( vault_unseal_keys is not defined or vault_unseal_keys == "" )

- name: unseal - Unseal the vault
  uri:
    url: "{{ vault_base_url }}/v1/sys/unseal"
    method: PUT
    status_code: 200
    validate_certs: "{{ vault_api_validate_certs }}"
    body_format: json
    body:
      key: "{{ item }}"
  with_items: "{{ vault_unseal_keys | default([]) }}"
  no_log: true
  when: vault_sealed and ( vault_unseal_keys is defined )
